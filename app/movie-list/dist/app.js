"use strict";angular.module("movieList").component("movieList",{templateUrl:"movie-list/movie-list.template.html",controller:["$http",function e(t){var o=this;t.get("https://dh-dev-prog.github.io/wtw/app/movies/movies.json").then(function(e){o.hero=e.data.movies.find(function(e){return e.hero});var t={};o.movies=e.data.movies;o.movies.forEach(function(e){e.genre.forEach(function(o){if(!t[o]){t[o]=[]}t[o].push(e)})});o.taglist=t}).catch(function(e){console.log("Error:",e)});this.propertyName="date";this.reverse=false;this.sortBy=function(e){this.reverse=this.propertyName===e?!this.reverse:false;this.propertyName=e};this.byTag=function(e,t){this.movies=e;var o=document.querySelector(".tag--list").getElementsByTagName("li");Array.prototype.forEach.call(o,function(e){e.classList.remove("is-active")});if(!t.currentTarget.classList.contains("is-active")){t.currentTarget.classList.add("is-active")}else{t.currentTarget.classList.remove("is-active")}};this.focusSearch=function(e){document.querySelector(".header").classList.toggle("header--close");document.querySelector(".filter").classList.toggle("header--close");document.querySelector(".main--wrapper").classList.toggle("header--close");document.querySelector(".filter--search-input").value=""};this.showFull=function(e,t){var o=document.getElementsByClassName("movie");var i=document.getElementsByClassName("movie-full");var r=document.getElementsByClassName("movie--content");Array.prototype.forEach.call(o,function(e){e.classList.remove("movie--open-0");e.classList.remove("movie--open-1");e.classList.remove("movie--open-2")});Array.prototype.forEach.call(i,function(e){e.classList.remove("movie-full--open")});var s="movie--open-";function n(e){console.log(e);if(e===0)return s+="0";if(e===1)return s+="1";if(e===2)return s+="2";return n(e-3)}var a=n(t);console.log(a);e.currentTarget.classList.toggle(a);e.currentTarget.querySelector(".movie-full").classList.toggle("movie-full--open")}}]});describe("movieList",function(){beforeEach(module("movieList"));describe("MovieListController",function(){var e,t;beforeEach(inject(function(o,i){e=i;e.expectGET("movies/movies.json").respond([{title:"john wick 2"},{title:"logan"}]);t=o("movieList")}));it("should create a `movie` property with 2 phones fetched with `$http`",function(){expect(t.movies).toBeUndefined();e.flush();expect(t.movies).toEqual([{title:"john wick 2"},{title:"logan"}])});it("should set a default value for the `orderProp` property",function(){expect(t.orderProp).toBe("date")})})});"use strict";angular.module("movieList",[]);