"use strict";angular.module("movieList").component("movieList",{templateUrl:"movie-list/movie-list.template.html",controller:["$http",function(e){var t=this;e.get("https://dh-dev-prog.github.io/wtw/app/movies/movies.json").then(function(e){t.hero=e.data.movies.find(function(e){return e.hero});var o={};t.movies=e.data.movies,t.movies.forEach(function(e){e.genre.forEach(function(t){o[t]||(o[t]=[]),o[t].push(e)})}),t.taglist=o}).catch(function(e){console.log("Error:",e)}),this.propertyName="date",this.reverse=!1,this.sortBy=function(e){this.reverse=this.propertyName===e&&!this.reverse,this.propertyName=e},this.byTag=function(e,t){this.movies=e;var o=document.querySelector(".tag--list").getElementsByTagName("li");Array.prototype.forEach.call(o,function(e){e.classList.remove("is-active")}),t.currentTarget.classList.contains("is-active")?t.currentTarget.classList.remove("is-active"):t.currentTarget.classList.add("is-active")},this.focusSearch=function(e){document.querySelector(".header").classList.toggle("header--close"),document.querySelector(".filter").classList.toggle("header--close"),document.querySelector(".main--wrapper").classList.toggle("header--close"),document.querySelector(".filter--search-input").value=""},this.showFull=function(e,t){function o(e){return console.log(e),0===e?r+="0":1===e?r+="1":2===e?r+="2":o(e-3)}var i=document.getElementsByClassName("movie"),s=document.getElementsByClassName("movie-full");document.getElementsByClassName("movie--content");Array.prototype.forEach.call(i,function(e){e.classList.remove("movie--open-0"),e.classList.remove("movie--open-1"),e.classList.remove("movie--open-2")}),Array.prototype.forEach.call(s,function(e){e.classList.remove("movie-full--open")});var r="movie--open-",c=o(t);console.log(c),e.currentTarget.classList.toggle(c),e.currentTarget.querySelector(".movie-full").classList.toggle("movie-full--open")}}]}),describe("movieList",function(){beforeEach(module("movieList")),describe("MovieListController",function(){var e,t;beforeEach(inject(function(o,i){(e=i).expectGET("movies/movies.json").respond([{title:"john wick 2"},{title:"logan"}]),t=o("movieList")})),it("should create a `movie` property with 2 phones fetched with `$http`",function(){expect(t.movies).toBeUndefined(),e.flush(),expect(t.movies).toEqual([{title:"john wick 2"},{title:"logan"}])}),it("should set a default value for the `orderProp` property",function(){expect(t.orderProp).toBe("date")})})}),angular.module("movieList",[]);